---
// src/components/layout/Sidebar.astro
import type { User } from '@/types/auth';

export interface Props {
  user?: User;
  currentPath: string;
  isCollapsedInitial?: boolean; 
}

const { user, currentPath, isCollapsedInitial = false } = Astro.props;

const logoEmoji = '💼';

const navigationItems = [
  { name: 'Dashboard', href: '/app/dashboard', emoji: '📊', id: 'nav-dashboard' },
  { name: 'Entities', href: '/app/entities', emoji: '🏢', id: 'nav-entities' },
  { name: 'Accounts', href: '/app/accounts', emoji: '📂', id: 'nav-accounts' },
  { name: 'Transactions', href: '/app/transactions', emoji: '💳', id: 'nav-transactions' },
  { name: 'Reports', href: '/app/reports', emoji: '📈', id: 'nav-reports' },
];

const settingsItems = [
  { name: 'Settings', href: '/app/settings', emoji: '⚙️', id: 'nav-settings' },
  { name: 'Help', href: '/app/help', emoji: '❓', id: 'nav-help' },
];

const adminItems = user?.role === 'admin' ? [
  { name: 'Admin', href: '/app/admin', emoji: '👑', id: 'nav-admin' }
] : [];

function isActive(itemPath: string): boolean {
  if (itemPath === '/app/dashboard' && currentPath === '/app/dashboard') {
    return true;
  }
  if (itemPath !== '/app/dashboard' && currentPath.startsWith(itemPath) && 
      (currentPath.length === itemPath.length || currentPath.charAt(itemPath.length) === '/')) {
    return true;
  }
  return false;
}

const SIDEBAR_WIDTH_VAR_NAME = '--sidebar-width';
const SIDEBAR_COLLAPSED_WIDTH_VAR_NAME = '--sidebar-collapsed-width';

const collapseDesktopEmoji = '⇤';
const expandDesktopEmoji = '⇥';
const logoutEmoji = '🚪'; 
---

<aside
  id="sidebar"
  class:list={[
    "fixed inset-y-0 left-0 z-30 flex flex-col bg-white dark:bg-neutral-800 border-r border-neutral-200 dark:border-neutral-700 transition-all duration-300 ease-in-out",
    "lg:translate-x-0",
  ]}
  x-data={`{
    mobileOpen: false,
    isCollapsed: ${isCollapsedInitial},
    sidebarWidthValue: typeof window !== 'undefined' ? getComputedStyle(document.documentElement).getPropertyValue('${SIDEBAR_WIDTH_VAR_NAME}').trim() || '16rem' : '16rem',
    sidebarCollapsedWidthValue: typeof window !== 'undefined' ? getComputedStyle(document.documentElement).getPropertyValue('${SIDEBAR_COLLAPSED_WIDTH_VAR_NAME}').trim() || '5rem' : '5rem',

    init() {
      if (typeof window !== 'undefined') {
        this.sidebarWidthValue = getComputedStyle(document.documentElement).getPropertyValue('${SIDEBAR_WIDTH_VAR_NAME}').trim() || '16rem';
        this.sidebarCollapsedWidthValue = getComputedStyle(document.documentElement).getPropertyValue('${SIDEBAR_COLLAPSED_WIDTH_VAR_NAME}').trim() || '5rem';
      }
      this.$watch('isCollapsed', value => {
        document.documentElement.style.setProperty(
          '--current-sidebar-width', 
          value ? this.sidebarCollapsedWidthValue : this.sidebarWidthValue
        );
      });
      document.documentElement.style.setProperty(
        '--current-sidebar-width', 
        this.isCollapsed ? this.sidebarCollapsedWidthValue : this.sidebarWidthValue
      );
      window.addEventListener('resize', () => {
        if (window.innerWidth >= 1024) this.mobileOpen = false;
      });
      window.addEventListener('toggle-sidebar-mobile', () => {
        if (window.innerWidth < 1024) this.mobileOpen = !this.mobileOpen;
      });
    },
    toggleCollapse() {
      this.isCollapsed = !this.isCollapsed;
    },
    get currentAppliedWidth() {
      return this.isCollapsed ? this.sidebarCollapsedWidthValue : this.sidebarWidthValue;
    }
  }`}
  x-bind:style="{ width: currentAppliedWidth }"
  x-bind:class="{
    'translate-x-0': mobileOpen || (typeof window !== 'undefined' && window.innerWidth >= 1024),
    '-translate-x-full': !mobileOpen && (typeof window !== 'undefined' && window.innerWidth < 1024)
  }"
  aria-label="Main navigation"
  x-cloak
>
  {/* Sidebar Header */}
  <div class="flex items-center justify-between h-[var(--header-height)] px-4 border-b border-neutral-200 dark:border-neutral-700 flex-shrink-0">
    <a href="/app/dashboard" class="flex items-center space-x-2 overflow-hidden" x-bind:class="{ 'w-full justify-center': isCollapsed }">
      {/* Use emoji instead of PA monogram */}
      <span class="text-2xl h-8 w-8 flex items-center justify-center flex-shrink-0" aria-hidden="true">{logoEmoji}</span>
      <span class="text-lg font-semibold dark:text-white whitespace-nowrap transition-opacity" x-show="!isCollapsed" x-transition.opacity.duration.200ms x-cloak>ProperAccount</span>
    </a>
    <button
      type="button"
      class="hidden lg:block p-1 text-neutral-500 hover:text-neutral-700 dark:text-neutral-400 dark:hover:text-white rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500"
      @click="toggleCollapse()"
      x-bind:aria-label="isCollapsed ? 'Expand sidebar' : 'Collapse sidebar'"
    >
      <span x-show="!isCollapsed" class="text-lg" aria-hidden="true" x-cloak>{collapseDesktopEmoji}</span>
      <span x-show="isCollapsed" class="text-lg" aria-hidden="true" x-cloak>{expandDesktopEmoji}</span>
    </button>
  </div>

  {/* Navigation */}
  <nav class="flex-1 overflow-y-auto py-4 px-3 space-y-1" aria-label="Sidebar navigation sections">
    <ul>
      {navigationItems.map(item => (
        <li>
          <a
            href={item.href}
            class:list={[
              "flex items-center px-3 py-2.5 text-sm font-medium rounded-md group transition-colors duration-150",
              isActive(item.href)
                ? 'bg-primary-100 text-primary-700 dark:bg-primary-700/30 dark:text-primary-200'
                : 'text-neutral-600 hover:bg-neutral-100 hover:text-neutral-900 dark:text-neutral-300 dark:hover:bg-neutral-700 dark:hover:text-white',
            ]}
            x-bind:class="{ 'justify-center': isCollapsed }"
            aria-current={isActive(item.href) ? 'page' : undefined}
            x-bind:title="isCollapsed ? item.name : undefined"
          >
            <span class="text-xl w-5 h-5 flex-shrink-0 flex items-center justify-center transition-all duration-300" x-bind:class="{ 'mr-0': isCollapsed, 'mr-3': !isCollapsed }" aria-hidden="true">{item.emoji}</span>
            <span class="whitespace-nowrap transition-opacity" x-show="!isCollapsed" x-transition.opacity.duration.200ms x-cloak>{item.name}</span>
          </a>
        </li>
      ))}
    </ul>

    {adminItems.length > 0 && (
      <div class="mt-6 pt-4 border-t border-neutral-200 dark:border-neutral-700">
        <h3 class="px-3 text-xs font-semibold text-neutral-500 dark:text-neutral-400 uppercase tracking-wider mb-1 transition-opacity" x-show="!isCollapsed" x-transition.opacity.duration.200ms x-cloak>Administration</h3>
        <ul class="space-y-1">
          {adminItems.map(item => (
            <li>
              <a
                href={item.href}
                class:list={[
                  "flex items-center px-3 py-2.5 text-sm font-medium rounded-md group transition-colors duration-150",
                  isActive(item.href)
                    ? 'bg-primary-100 text-primary-700 dark:bg-primary-700/30 dark:text-primary-200'
                    : 'text-neutral-600 hover:bg-neutral-100 hover:text-neutral-900 dark:text-neutral-300 dark:hover:bg-neutral-700 dark:hover:text-white'
                ]}
                x-bind:class="{ 'justify-center': isCollapsed }"
                aria-current={isActive(item.href) ? 'page' : undefined}
                x-bind:title="isCollapsed ? item.name : undefined"
              >
                <span class="text-xl w-5 h-5 flex-shrink-0 flex items-center justify-center transition-all duration-300" x-bind:class="{ 'mr-0': isCollapsed, 'mr-3': !isCollapsed }" aria-hidden="true">{item.emoji}</span>
                <span class="whitespace-nowrap transition-opacity" x-show="!isCollapsed" x-transition.opacity x-cloak>{item.name}</span>
              </a>
            </li>
          ))}
        </ul>
      </div>
    )}

    <div class="mt-auto pt-6">
       <ul class="space-y-1 border-t border-neutral-200 dark:border-neutral-700 pt-4">
        {settingsItems.map(item => (
          <li>
            <a
              href={item.href}
              class:list={[
                "flex items-center px-3 py-2.5 text-sm font-medium rounded-md group transition-colors duration-150",
                isActive(item.href)
                  ? 'bg-primary-100 text-primary-700 dark:bg-primary-700/30 dark:text-primary-200'
                  : 'text-neutral-600 hover:bg-neutral-100 hover:text-neutral-900 dark:text-neutral-300 dark:hover:bg-neutral-700 dark:hover:text-white'
              ]}
              x-bind:class="{ 'justify-center': isCollapsed }"
              aria-current={isActive(item.href) ? 'page' : undefined}
              x-bind:title="isCollapsed ? item.name : undefined"
            >
              <span class="text-xl w-5 h-5 flex-shrink-0 flex items-center justify-center transition-all duration-300" x-bind:class="{ 'mr-0': isCollapsed, 'mr-3': !isCollapsed }" aria-hidden="true">{item.emoji}</span>
              <span class="whitespace-nowrap transition-opacity" x-show="!isCollapsed" x-transition.opacity x-cloak>{item.name}</span>
            </a>
          </li>
        ))}
      </ul>
    </div>
  </nav>

  {/* User Profile Section */}
  <div class="border-t border-neutral-200 dark:border-neutral-700 p-3 flex-shrink-0">
    <a
      href={user ? "/app/settings/profile" : "/auth/login"}
      class:list={[
        "flex items-center group w-full hover:bg-neutral-100 dark:hover:bg-neutral-700/50 rounded-md p-1.5 transition-colors",
      ]}
      x-bind:class="{ 'justify-center': isCollapsed }"
      x-bind:title="isCollapsed ? (user?.name || user?.email || (user ? 'User Profile' : 'Login')) : undefined"
    >
      <div class="flex-shrink-0">
        {user?.imageUrl ? (
          <img src={user.imageUrl} alt={user.name || 'User avatar'} class="h-8 w-8 rounded-full object-cover"/>
        ) : (
          <div class="h-8 w-8 rounded-full bg-primary-100 dark:bg-primary-800 flex items-center justify-center text-xl">
            <span class="text-primary-700 dark:text-primary-300 font-medium">
              {user ? (user.name?.charAt(0).toUpperCase() || user.email?.charAt(0).toUpperCase() || '👤') : '👤'}
            </span>
          </div>
        )}
      </div>
      <div class="ml-3 min-w-0 flex-1 transition-opacity" x-show="!isCollapsed" x-transition.opacity.duration.200ms x-cloak>
        <p class="text-sm font-medium text-neutral-700 dark:text-neutral-200 truncate">{user?.name || user?.email || 'Guest User'}</p>
        <p class="text-xs text-neutral-500 dark:text-neutral-400 group-hover:text-primary-600 dark:group-hover:text-primary-400">{user ? 'View profile' : 'Sign In'}</p>
      </div>
      {user && (
        <form method="POST" action="/auth/signout" class="ml-auto transition-opacity" x-show="!isCollapsed" x-transition.opacity.duration.200ms x-cloak>
          <button type="submit" class="p-1 text-neutral-500 hover:text-danger dark:hover:text-danger-light rounded-md" aria-label="Sign out" title="Sign out">
            <span class="text-lg" aria-hidden="true">{logoutEmoji}</span>
          </button>
        </form>
      )}
    </a>
  </div>
</aside>

{/* Mobile menu overlay */}
<div
  class="fixed inset-0 z-20 bg-neutral-900/30 dark:bg-black/50 lg:hidden transition-opacity"
  x-data="{}"
  x-show="$data(document.getElementById('sidebar')).mobileOpen && (typeof window !== 'undefined' && window.innerWidth < 1024)"
  x-transition:enter="ease-out duration-300"
  x-transition:enter-start="opacity-0"
  x-transition:enter-end="opacity-100"
  x-transition:leave="ease-in duration-200"
  x-transition:leave-start="opacity-100"
  x-transition:leave-end="opacity-0"
  @click="$data(document.getElementById('sidebar')).mobileOpen = false"
  x-cloak
  aria-hidden="true"
></div>
