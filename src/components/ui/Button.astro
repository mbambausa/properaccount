---
// src/components/ui/Button.astro
export type ButtonType = 'button' | 'submit' | 'reset';
export type ButtonVariant = 'primary' | 'secondary' | 'outline' | 'text' | 'danger';
export type ButtonSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';

export interface Props {
  as?: 'button' | 'a';
  href?: string;
  type?: ButtonType;
  variant?: ButtonVariant;
  size?: ButtonSize;
  fullWidth?: boolean;
  disabled?: boolean;
  loading?: boolean;
  form?: string;
  id?: string;
  class?: string;
  'data-testid'?: string;
  target?: string;
  rel?: string;
}

const {
  as = Astro.props.href ? 'a' : 'button',
  href,
  type = 'button' as ButtonType,
  variant = 'primary' as ButtonVariant,
  size = 'md' as ButtonSize,
  fullWidth = false,
  disabled = false,
  loading = false,
  form,
  id,
  class: userClassName = '',
  'data-testid': dataTestId,
  target,
  rel,
} = Astro.props as Props;

const baseClasses = 'btn font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-neutral-900 inline-flex items-center justify-center transition-colors duration-150 ease-in-out';

const sizeClasses: Record<ButtonSize, string> = {
  xs: 'text-xs px-2.5 py-1.5 rounded-sm',
  sm: 'text-sm px-3 py-2 rounded',
  md: 'text-base px-4 py-2 rounded-md',
  lg: 'text-lg px-5 py-2.5 rounded-lg',
  xl: 'text-xl px-6 py-3 rounded-lg',
};

const variantClasses: Record<ButtonVariant, string> = {
  primary: 'btn-primary',
  secondary: 'btn-secondary',
  outline: 'border-2 border-primary-500 bg-transparent text-primary-600 hover:bg-primary-50 focus:ring-primary-500 dark:text-primary-400 dark:border-primary-400 dark:hover:bg-primary-900/30',
  text: 'bg-transparent text-primary-600 hover:bg-primary-50 hover:underline focus:ring-primary-500 dark:text-primary-400 dark:hover:bg-primary-900/20',
  danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500 focus:ring-offset-red-50 dark:bg-red-700 dark:hover:bg-red-800',
};

const currentSizeClass = sizeClasses[size];
const currentVariantClass = variantClasses[variant];

// Initial combined classes, can be overridden by link-specific disabled state
let combinedClasses = [
  baseClasses,
  currentSizeClass,
  currentVariantClass,
  fullWidth ? 'w-full' : '',
  loading ? 'opacity-75 cursor-not-allowed pointer-events-none' : '',
  (disabled && as === 'button') ? 'opacity-50 cursor-not-allowed' : '',
  userClassName,
]
  .filter(Boolean)
  .join(' ');

// Specific attributes for the link element
let linkAriaDisabled: 'true' | undefined = undefined;
let linkTabIndex: number | undefined = undefined;

if (as === 'a' && disabled) {
  combinedClasses = `${combinedClasses} opacity-50 cursor-not-allowed pointer-events-none`.trim();
  linkAriaDisabled = 'true';
  linkTabIndex = -1;
}

---

{as === 'button' ? (
  <button
    id={id}
    class={combinedClasses}
    data-testid={dataTestId}
    type={type}
    disabled={disabled || loading}
    form={form}
    aria-live={loading ? 'polite' : undefined}
    aria-busy={loading ? 'true' : undefined}
  >
    {loading && (
      <span class="inline-flex items-center leading-none">
        <svg class="animate-spin -ml-0.5 mr-2 h-4 w-4 text-current" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" role="status" aria-hidden="true">
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
      </span>
    )}
    <slot />
  </button>
) : (
  <a
    id={id}
    class={combinedClasses}
    data-testid={dataTestId}
    href={disabled ? undefined : href}
    target={target}
    rel={rel}
    aria-disabled={linkAriaDisabled}
    tabindex={linkTabIndex}
    role={href && href !== '#' ? undefined : "button"}
  >
    {loading && ( // Loading indicator for links
      <span class="inline-flex items-center leading-none">
        <svg class="animate-spin -ml-0.5 mr-2 h-4 w-4 text-current" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" role="status" aria-hidden="true">
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
      </span>
    )}
    <slot />
  </a>
)}