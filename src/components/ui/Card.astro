---
// src/components/ui/Card.astro
export interface Props {
  title?: string;
  subtitle?: string;
  noPadding?: boolean;
  variant?: 'default' | 'outline' | 'filled';
  class?: string;
  headerClass?: string; // Renamed for clarity
  bodyClass?: string;
  footerClass?: string;
  'data-testid'?: string;
}

const {
  title,
  subtitle,
  noPadding = false,
  variant = 'default',
  class: userClassName = '', // Renamed for clarity
  headerClass = '',
  bodyClass = '',
  footerClass = '',
  'data-testid': dataTestId,
} = Astro.props;

// Variant base classes
// 'default' expects a 'card' shortcut from uno.config.ts or global.css
// For 'outline' and 'filled', specific utility classes are applied here.
const variantBaseClasses = {
  default: 'card', // Expects: 'bg-white dark:bg-neutral-800 rounded-lg shadow-sm'
  outline: 'border border-neutral-200 dark:border-neutral-700 rounded-lg bg-white dark:bg-neutral-800',
  filled: 'bg-neutral-100 dark:bg-neutral-700/50 rounded-lg', // Adjusted dark bg for filled
};

// Classes for the header section
// Expects 'card-header' shortcut from uno.config.ts or global.css
const headerBaseClasses = 'card-header px-4 py-3 border-b border-neutral-200 dark:border-neutral-700';

// Determine if we have header or footer slots
const hasHeaderSlot = Astro.slots.has('header');
const hasFooterSlot = Astro.slots.has('footer');
const hasTitleOrSubtitle = title || subtitle;
---

<div class={`${variantBaseClasses[variant]} overflow-hidden ${userClassName}`} data-testid={dataTestId}>
  {/* Card Header - Render if slot, title, or subtitle is present */}
  {(hasHeaderSlot || hasTitleOrSubtitle) && (
    <div class={`${headerBaseClasses} ${headerClass}`}>
      {hasHeaderSlot ? (
        <slot name="header" />
      ) : (
        <>
          {title && <h3 class="text-lg font-semibold leading-6 text-neutral-900 dark:text-white">{title}</h3>}
          {subtitle && <p class={`mt-1 text-sm text-neutral-500 dark:text-neutral-400 ${title ? 'mt-1' : ''}`}>{subtitle}</p>}
        </>
      )}
    </div>
  )}

  {/* Card Body */}
  <div class={`${noPadding ? '' : 'p-4'} ${bodyClass}`}>
    <slot />
  </div>

  {/* Card Footer */}
  {hasFooterSlot && (
    <div class={`border-t border-neutral-200 dark:border-neutral-700 px-4 py-3 ${footerClass}`}>
      <slot name="footer" />
    </div>
  )}
</div>