---
// src/components/ui/Alert.astro
interface Props {
  type?: 'info' | 'success' | 'warning' | 'error';
  dismissible?: boolean;
  class?: string; // Allow a custom class to be passed
}

const { 
  type = 'info',
  dismissible = false,
  class: customClassFromProps
} = Astro.props;

const baseAlertClasses = "p-4 mb-4 border rounded-md";

const typeStyles = {
  info: {
    container: 'bg-primary-50 text-primary-800 border-primary-200 dark:bg-primary-900/30 dark:text-primary-200 dark:border-primary-700',
    emoji: '‚ÑπÔ∏è', // Example: Information emoji
    emojiClass: 'text-primary-500', // Optional: if you want to color the emoji via a parent span
  },
  success: {
    container: 'bg-success/10 text-success border-success/20 dark:bg-success/20 dark:text-success dark:border-success/30',
    emoji: '‚úÖ', // Example: Checkmark emoji
    emojiClass: 'text-success',
  },
  warning: {
    container: 'bg-yellow-50 text-yellow-800 border-yellow-200 dark:bg-yellow-900/30 dark:text-yellow-200 dark:border-yellow-700',
    emoji: '‚ö†Ô∏è', // Example: Warning emoji
    emojiClass: 'text-yellow-500', // Using yellow-500 for consistency if needed, though emojis have their own color
  },
  error: {
    container: 'bg-danger/10 text-danger border-danger/20 dark:bg-danger/20 dark:text-danger dark:border-danger/30',
    emoji: '‚ùå', // Example: Cross mark emoji (or üõë for stop)
    emojiClass: 'text-danger',
  }
};

const currentTypeStyle = typeStyles[type];
const closeEmoji = '‚úï'; // Heavy multiplication X or similar
---

<div 
  class:list={[
    baseAlertClasses,
    currentTypeStyle.container,
    customClassFromProps
  ]}
  x-data="{ show: true }"
  x-show="show"
  x-transition:leave="transition ease-in duration-200"
  x-transition:leave-start="opacity-100"
  x-transition:leave-end="opacity-0"
  role="alert"
>
  <div class="flex items-start">
    <div class:list={["flex-shrink-0 mr-3 text-xl leading-none", currentTypeStyle.emojiClass]} aria-hidden="true">
      {currentTypeStyle.emoji}
    </div>
    <div class="flex-1">
      <slot />
    </div>
    {dismissible && (
      <button 
        type="button"
        class="ml-auto -mx-1.5 -my-1.5 rounded-lg p-1.5 inline-flex items-center justify-center h-8 w-8 hover:bg-black/10 dark:hover:bg-white/10 transition-colors duration-150 focus:outline-none focus:ring-2 focus:ring-current"
        aria-label="Close alert"
        @click="show = false"
      >
        <span class="sr-only">Close</span>
        <span class="h-4 w-4 inline-flex items-center justify-center" aria-hidden="true">{closeEmoji}</span>
      </button>
    )}
  </div>
</div>