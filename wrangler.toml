# wrangler.toml
name = "properaccount"
compatibility_date = "2025-05-18"
compatibility_flags = ["nodejs_compat"]

pages_build_output_dir = "./dist"

# [site] block is primarily for 'wrangler dev'. 
# 'wrangler pages dev' uses the pages_build_output_dir.
# It can be kept if you also use 'wrangler dev' for worker-focused local testing.
[site]
bucket = "./dist"

# =========================================
# Build Configuration
# =========================================
[build]
command = "npm run build"

[build.upload]
format = "modules" # For _worker.js format used by Pages
main = "./dist/_worker.js" # Entry point for your built worker

# =========================================
# Local Development Resources (Wrangler will simulate these)
# =========================================
[[d1_databases]]
binding = "DATABASE"
database_name = "properaccount-db-local"
database_id = "local" # Wrangler uses this for local simulation

# For local development, KV and R2 can be simulated by Wrangler.
# You would typically bind them in your wrangler pages dev command:
# e.g., wrangler pages dev ./dist --kv=CONFIG_KV --r2=DOCUMENTS_BUCKET

# =========================================
# Production Environment Configuration
# =========================================
[env.production]
name = "properaccount-prod" # Name of the production Pages project/deployment
workers_dev = false # Deprecated for Pages, but good to keep for clarity if also deploying Workers
minify = true

[env.production.vars]
ENVIRONMENT = "production"
# Add other production-specific environment variables here

# Security headers for responses from your _worker.js
# Note: Astro also allows managing headers via a public/_headers file,
# which Cloudflare Pages can process for static assets.
# Ensure consistency or prioritize one method for headers served via the worker.
[env.production.browser]
headers = {
  "X-Content-Type-Options" = "nosniff",
  "X-Frame-Options" = "DENY",
  "X-XSS-Protection" = "1; mode=block",
  "Referrer-Policy" = "strict-origin-when-cross-origin",
  "Permissions-Policy" = "camera=(), microphone=(), geolocation=()"
}

# --- Production D1 Database ---
[[env.production.d1_databases]]
binding = "DATABASE" # How your code accesses it (e.g., env.DATABASE)
database_name = "properaccount-db" # The actual D1 database name in Cloudflare
database_id = "bc1c31a7-957e-4086-aa55-54384fe0c80a" # YOUR PRODUCTION D1 ID
migrations_dir = "cloudflare/d1/migrations"
# This preview_database_id MUST point to a SEPARATE D1 database used for previews
# when running `wrangler d1 migrations apply DATABASE --preview`
preview_database_id = "YOUR_PREVIEW_D1_ID_HERE" # Replace with actual PREVIEW D1 ID

# --- Production KV Namespaces ---
[[env.production.kv_namespaces]]
binding = "CONFIG_KV"
id = "d34d0bbafca1424d8c678aade9a60dce" # YOUR PRODUCTION CONFIG_KV ID
preview_id = "YOUR_PREVIEW_CONFIG_KV_ID_HERE" # Replace with actual PREVIEW CONFIG_KV ID

[[env.production.kv_namespaces]]
binding = "REPORT_CACHE_KV"
id = "e1be52c7b89845c08dc30eb5f0af4562" # YOUR PRODUCTION REPORT_CACHE_KV ID
preview_id = "YOUR_PREVIEW_REPORT_CACHE_KV_ID_HERE" # Replace with actual PREVIEW REPORT_CACHE_KV ID

[[env.production.kv_namespaces]]
binding = "SESSION_KV"
id = "ed0fcd9e4e26484ca2d299f47439c33d" # YOUR PRODUCTION SESSION_KV ID
preview_id = "YOUR_PREVIEW_SESSION_KV_ID_HERE" # Replace with actual PREVIEW SESSION_KV ID

# --- Production R2 Bucket ---
[[env.production.r2_buckets]]
binding = "DOCUMENTS_BUCKET"
bucket_name = "properaccount-documents-prod" # YOUR PRODUCTION R2 BUCKET NAME
# This preview_bucket_name MUST point to a SEPARATE R2 bucket used for previews
preview_bucket_name = "properaccount-documents-preview" # Replace with actual PREVIEW R2 BUCKET NAME

# =========================================
# Preview Environment Configuration
# =========================================
[env.preview]
name = "properaccount-preview" # Name of the preview Pages project/deployments (often project_name-preview)
vars = { ENVIRONMENT = "preview" }
# Add other preview-specific environment variables here

# Bindings here should point to dedicated PREVIEW resources
# These IDs/names must match the PREVIEW resources you create in Cloudflare

[[env.preview.d1_databases]]
binding = "DATABASE"
database_name = "properaccount-db-preview" # A D1 database specifically for previews
database_id = "YOUR_PREVIEW_D1_ID_HERE" # Replace with actual PREVIEW D1 ID
migrations_dir = "cloudflare/d1/migrations" # Migrations are applied to this DB for previews

[[env.preview.kv_namespaces]]
binding = "CONFIG_KV"
id = "YOUR_PREVIEW_CONFIG_KV_ID_HERE" # Replace with actual PREVIEW CONFIG_KV ID

[[env.preview.kv_namespaces]]
binding = "REPORT_CACHE_KV"
id = "YOUR_PREVIEW_REPORT_CACHE_KV_ID_HERE" # Replace with actual PREVIEW REPORT_CACHE_KV ID

[[env.preview.kv_namespaces]]
binding = "SESSION_KV"
id = "YOUR_PREVIEW_SESSION_KV_ID_HERE" # Replace with actual PREVIEW SESSION_KV ID

[[env.preview.r2_buckets]]
binding = "DOCUMENTS_BUCKET"
bucket_name = "properaccount-documents-preview" # An R2 bucket specifically for previews
# Ensure this preview bucket has appropriate CORS settings if needed for client-side uploads.