# wrangler.toml
# Top-level name of your Pages Function / Worker (often your project name)
name = "properaccount"

# Specifies the date for API versioning and behavior changes.
# Update this periodically to opt-into new features and defaults.
compatibility_date = "2025-05-18" # Current as of your project docs

# Enables compatibility with Node.js APIs in Cloudflare Workers.
compatibility_flags = ["nodejs_compat"]

# Specifies the directory where `astro build` outputs the Cloudflare Pages compatible format.
pages_build_output_dir = "./dist"

# The [site] block is primarily for `wrangler dev` (for standalone Worker development)
# to serve static assets. 
# For `wrangler pages dev`, it uses `pages_build_output_dir` to serve the Pages project.
# This block can be kept if you also use `wrangler dev` for worker-focused local testing.
[site]
bucket = "./dist" # Path to static assets for `wrangler dev`

# =========================================
# Build Configuration (for `wrangler pages deploy` or `wrangler deploy`)
# =========================================
[build]
command = "npm run build" # Command to build your Astro project

[build.upload]
format = "modules" # Required for the _worker.js format used by Cloudflare Pages
# The main entrypoint for your Astro application's server-side logic when deployed to Pages.
# This is automatically generated by the `@astrojs/cloudflare` adapter.
main = "./dist/_worker.js" 

# =========================================
# Local Development Resources (`wrangler dev` or `wrangler pages dev`)
# =========================================
# For `wrangler pages dev`, bindings can be simulated locally.
# Top-level bindings defined here might be picked up by `wrangler pages dev`,
# or you can pass them via CLI flags (e.g., --d1, --kv, --r2).

[[d1_databases]]
binding = "DATABASE" # How your Worker code accesses it (e.g., env.DATABASE)
database_name = "properaccount-db-local" # Name for the local simulated D1 database
database_id = "local-db-id" # An identifier for Wrangler's local simulation; can be any string.
migrations_dir = "cloudflare/d1/migrations" # Ensures local `wrangler d1 execute` uses these

# Example for local KV (Wrangler will create local files for these)
# [[kv_namespaces]]
# binding = "CONFIG_KV"
# id = "local-config-kv-id" # This ID is for local wrangler dev simulation

# Example for local R2 (Wrangler will create local directories for these)
# [[r2_buckets]]
# binding = "DOCUMENTS_BUCKET"
# bucket_name = "properaccount-documents-local"

# =========================================
# Production Environment Configuration (`env.production`)
# =========================================
[env.production]
name = "properaccount-prod" # This should match your Cloudflare Pages production project name.
minify = true

# Non-secret environment variables for production.
# Secrets (like API keys, AUTH_SECRET) are set in the Cloudflare Pages dashboard
# and are automatically available as `env.SECRET_NAME`.
[env.production.vars]
ENVIRONMENT = "production"
# PUBLIC_APP_URL = "https://your.production.domain" # Set your actual production URL here or in CF Pages UI
# Other non-secret production vars

# --- Production D1 Database ---
[[env.production.d1_databases]]
binding = "DATABASE"                                 # Matches CF UI Binding Name
database_name = "properaccount-db"                   # Matches CF UI Resource Name
database_id = "bc1c31a7-957e-4086-aa55-54384fe0c80a" # Matches CF UI D1 ID
migrations_dir = "cloudflare/d1/migrations"
# CRITICAL: `preview_database_id` here is for `wrangler d1 migrations apply --remote --env production --preview`.
# It should point to your DEDICATED PREVIEW D1 database ID if you use this specific command flow.
# If your preview environment ([env.preview]) handles all preview migrations, this might not be strictly needed here,
# or it should be identical to the database_id in [env.preview].
preview_database_id = "YOUR_PREVIEW_D1_ID_HERE" # <<< --- !!! REPLACE THIS with actual PREVIEW D1 ID

# --- Production KV Namespaces ---
[[env.production.kv_namespaces]]
binding = "CONFIG_KV"                                # Matches CF UI Binding Name
id = "d34d0bbafca1424d8c678aade9a60dce"              # Matches CF UI KV ID for "ProperAccount" KV

[[env.production.kv_namespaces]]
binding = "REPORT_CACHE_KV"                          # Matches CF UI Binding Name
id = "e1be52c7b89845c08dc30eb5f0af4562"              # Matches CF UI KV ID for "ProperAccount REPORT_CACHE_KV"

[[env.production.kv_namespaces]]
binding = "SESSION_KV"                               # Matches CF UI Binding Name
id = "ed0fcd9e4e26484ca2d299f47439c33d"              # Matches CF UI KV ID for "ProperAccount SESSION"

# --- Production R2 Bucket ---
[[env.production.r2_buckets]]
binding = "DOCUMENTS_BUCKET"                         # Matches CF UI Binding Name
bucket_name = "properaccount-documents-prod"         # Matches CF UI Resource Name

# =========================================
# Preview Environment Configuration (`env.preview`)
# =========================================
# This environment is typically used for Cloudflare Pages branch previews (e.g., from PRs).
[env.preview]
name = "properaccount-preview" # This name is conventional for Pages previews (often project_name-preview or specific to branch)
# Secrets should be set via Cloudflare Dashboard secrets for preview environments if different from prod.
[env.preview.vars]
ENVIRONMENT = "preview"
# PUBLIC_APP_URL = "https://preview-branch.your-pages-project.pages.dev" # Example for preview URLs

# Bindings here MUST point to dedicated PREVIEW resources. Do NOT use production resources.

# --- Preview D1 Database ---
# CRITICAL: Replace YOUR_PREVIEW_D1_ID with the ID of a DEDICATED D1 database for preview/staging.
[[env.preview.d1_databases]]
binding = "DATABASE"
database_name = "properaccount-db-preview"   # Example: Name of your preview D1 database
database_id = "YOUR_PREVIEW_D1_ID_HERE"      # <<< --- !!! REPLACE THIS !!!
migrations_dir = "cloudflare/d1/migrations"

# --- Preview KV Namespaces ---
# CRITICAL: Replace YOUR_PREVIEW_..._ID with your actual Preview KV Namespace IDs.
[[env.preview.kv_namespaces]]
binding = "CONFIG_KV"
id = "YOUR_PREVIEW_CONFIG_KV_ID_HERE"        # <<< --- !!! REPLACE THIS !!!

[[env.preview.kv_namespaces]]
binding = "REPORT_CACHE_KV"
id = "YOUR_PREVIEW_REPORT_CACHE_KV_ID_HERE"  # <<< --- !!! REPLACE THIS !!!

[[env.preview.kv_namespaces]]
binding = "SESSION_KV"
id = "YOUR_PREVIEW_SESSION_KV_ID_HERE"       # <<< --- !!! REPLACE THIS !!!

# --- Preview R2 Bucket ---
# CRITICAL: Replace YOUR_PREVIEW_R2_BUCKET_NAME with your actual Preview R2 Bucket Name.
[[env.preview.r2_buckets]]
binding = "DOCUMENTS_BUCKET"
bucket_name = "properaccount-documents-preview" # Example: Name of your preview R2 bucket
# Ensure this preview bucket has appropriate CORS settings if needed for client-side uploads.